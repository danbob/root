DODAÆ tabelki.txt
=============================

--DODANIE KOLUMNY DO TABELI--
ALTER TABLE wydzialy
ADD kolumna NUMBER(2);

--MODYFIKACJA RODZAJU WPISYWANYCH WARTOŒCI W KOLUMNIE--
ALTER TABLE wydzialy
MODIFY kolumna NUMBER(5);

--USUWANIE DANEJ KOLUMNY--
ALTER TABLE wydzialy
DROP COLUMN kolumna;

??--USUWANIE WIERSZA Z TABELI O DANYM ID--??
DELETE FROM wydzialy
WHERE id=4;

--AKTUALIZACJA/ZMIANA DANYCH (NAZWISKA) W DANYM WIERSZU--
UPDATE osoby
SET nazwisko='Malinowska'
WHERE id=6;

--AKTUALIZACJA/ZMIANA DANYCH (NAZWISKA) W DANYM WIERSZU ZE ZMIAN¥ PIERWSZEJ LITERY (W KA¯DYM S£OWIE) NA DU¯¥ (INITCAP)--
UPDATE osoby
SET nazwisko=INITCAP('malinowska')
WHERE id=6;

--WYŒWIETLANIE NAZWISK Z MA£YCH LITER--
SELECT nazwisko FROM osoby
WHERE nazwisko=LOWER(nazwisko);

--WYŒWIETLANIE KA¯DEJ KOLUMNY DLA NAZWISKA 'kot' (PISANE Z MA£YCH LITER)--
SELECT * FROM osoby
WHERE LOWER(nazwisko)=LOWER('kot');

--WYŒWIETLANIE NAZWISK Z DU¯YCH LITER--
SELECT UPPER(nazwisko)
FROM osoby;

--WYŒWIETLANIE NAZWISK O PODANYCH ID--
SELECT nazwisko
FROM osoby
WHERE id IN(3, 5, 7);
--LUB--
SELECT nazwisko
FROM osoby
WHERE id=ANY(3, 5, 7);

--WYŒWIETLA NAZWISKA KOÑCZ¥CE SIÊ NA LITERÊ 'a'--
SELECT * FROM osoby
WHERE SUBSTR(nazwisko, LENGTH(nazwisko))='a';
--LUB--
SELECT * FROM osoby
WHERE nazwisko LIKE '%a';

--WYŒWIETLA NAZWISKO O OKREŒLONEJ LICZBIE ZNAKÓW ('_') ZAKOÑCZONYCH NA DAN¥ LITERÊ--
SELECT * FROM osoby
WHERE nazwisko LIKE '__t';

--PODANIE DRUGIEGO IMIENIA ORAZ ZAMIANA WARTOŒCI 'NULL' NA 'brak'--
SELECT NVL(imie2,'brak')
FROM osoby;

--PODANIE INICJA£ÓW (PO£¥CZENIE KOLUMNY NAZWISK Z IMIONAMI)--
SELECT SUBSTR(nazwisko, 1, 1) || SUBSTR(imie1, 1, 1)
AS inicialy
FROM osoby;

--ZAMIANA OZNACZENIA P£CI ('K' NA 'kobieta','M' NA 'mezczyzna')--
SELECT DECODE(plec,'K','kobieta','M','mezczyzna')
AS plec
FROM osoby;
--LUB--
SELECT REPLACE(REPLACE(plec,'M','mezczyzna'),'K','kobieta')
FROM osoby;
--LUB--
SELECT nazwisko, Case 
WHEN plec='K' THEN 'kobieta'
ELSE 'mezczyzna' END 
AS plec
FROM osoby;

--WSKAZANIE SAMEGO ROKU Z DATY URODZENIA--
SELECT
TO_CHAR(data_ur,'yyyy')
FROM osoby;

--POKAZUJE OSOBY URODZONE PRZED DAT¥--
SELECT * FROM osoby
WHERE data_ur < to_date ('10/10/1970','dd/mm/yyyy');

--POKAZUJE OSOBY URODZONE PO DACIE (Z UWZGLÊDNIENIEM RODZAJU ZNAKÓW)--
SELECT * FROM osoby
WHERE TO_NUMBER(EXTRACT(year FROM data_ur))>1970;
--LUB--
SELECT * FROM osoby
WHERE TO_NUMBER(TO_CHAR(data_ur,'yyyy'))>1970;

--OBLICZENIE ILOŒCI ZNAKÓW--
SELECT nazwisko || imie1 || ' dlugosc:' || 
(LENGTH(nazwisko) + LENGTH(imie1))
AS dlogosc
FROM osoby;

--ZLICZA ILOŒÆ WIERSZY W TABELI--
SELECT COUNT(*)
FROM pensje;

--ZLICZANIE ILOŒCI PENSJI PO ID_OSOBY--
SELECT id_osoby, COUNT(*)
FROM pensje
GROUP BY id_osoby;

--SUMA PENSJI DANEJ OSOBY--
SELECT id_osoby, SUM(pensja)
FROM pensje
GROUP BY id_osoby;

--ZLICZANIE SUMY PENSJI, GDZIE S¥ WIÊCEJ NI¯ DWIE PENSJE--
SELECT id_osoby, SUM(pensja)
FROM pensje
GROUP BY id_osoby
HAVING COUNT(*) > 1;

--WYPISANIE ID 1, 7, GDZIE MAJ¥ DWIE PENSJE--
SELECT id_osoby, SUM(pensja)
FROM pensje
WHERE id_osoby in(1, 7)
GROUP BY id_osoby
HAVING COUNT(*) > 1;

--WYŒWIETLENIE DANYCH OSOBOWYCH OSOBY 'Norek'--
SELECT * 
FROM osoby
WHERE INITCAP(nazwisko)='Norek';

--OSTATNIE NAZWISKO ALFABETYCZNIE Z TABELI--
SELECT MAX(nazwisko)
FROM osoby;

--OSTATNIE NAZWISKO ALFABETYCZNIE Z TABELI + JEJ DANE--
SELECT * FROM osoby
WHERE nazwisko=(SELECT MAX(nazwisko) FROM osoby);

--NAZWISKA ZACZYNAJ¥CE SIÊ NA MA£¥ LITERÊ--
SELECT o.* FROM osoby o
WHERE o.nazwisko IN (SELECT LOWER(nazwisko) FROM osoby);

--WYŒWIETLA NAJM£ODSZ¥ OSOBÊ Z TABELI--
SELECT o.* FROM osoby o
WHERE o.data_ur IN (SELECT MAX(data_ur) FROM osoby);

--WYŒWIETLA WSZYSTKIE OSOBY OD TEJ NAJSTARSZEJ (BEZ JEJ UWZGLÊDNIENIA)--
SELECT o.* FROM osoby o
WHERE NOT o.data_ur IN (SELECT MIN(data_ur) FROM osoby);
--LUB--
SELECT o.* FROM osoby o
WHERE o.data_ur > (SELECT MIN(data_ur) FROM osoby);

--OSOBY NIEPOSIADAJ¥CE PENSJI--
SELECT o.* FROM osoby o
WHERE o.id IN (SELECT p.id_osoby FROM pensje p WHERE p.pensja IS NULL);

--OSOBY, KTÓRE NIE MAJ¥ DATY ZATRUDNIENIA 'do'--
SELECT o.* FROM osoby o
WHERE o.id IN (SELECT p.id_osoby FROM pensje p WHERE p.do IS NULL);

--PIERWSZA OSOBA Z TABELI OSOBY--
SELECT o.* FROM osoby o
WHERE ROWNUM = 1; 

--TRZY PIERWSZE OSOBY Z TABELI OSOBY--
SELECT o.* FROM osoby o
WHERE ROWNUM <=3;

--TRZY OSOBY Z TABELI OSOBY WYMIENIONE ALFABETYCZNIE--
SELECT * FROM(SELECT * FROM osoby
ORDER BY nazwisko)
WHERE ROWNUM <= 3;

--CZTERY OSOBY Z TABELI OSOBY WYMIENIONE ALFABETYCZNIE--
SELECT * FROM(SELECT * FROM osoby
ORDER BY nazwisko DESC) 
WHERE ROWNUM <= 4;

--DANE SZEFÓW--
SELECT * FROM osoby
WHERE id IN(SELECT szef FROM wydzialy);

--DANE OSOBY, KTÓRA POSIADA NAJD£U¯SZ¥ SUMÊ IMIENIA I NAZWISKA--
SELECT o.* FROM osoby o
WHERE LENGTH(o.imie1)+LENGTH(o.nazwisko) IN(SELECT MAX(LENGTH(nazwisko) + LENGTH(imie1)) FROM osoby);

--NAJKRÓTSZA NAZWA WYDZIA£U--
SELECT w.* FROM wydzialy w
WHERE LENGTH(w.nazwa) IN(SELECT MIN(LENGTH(w1.nazwa)) FROM wydzialy w1);

--DANE NAJSTARSZEJ AKTUALNIE ZATRUDNIONEJ OSOBY--
SELECT * FROM osoby
WHERE data_ur IN(SELECT MIN(data_ur) FROM osoby INNER JOIN pensje ON osoby.id=pensje.id_osoby
WHERE pensje.do IS NOT NULL);

??--NAZWISKO OSOBY, KTÓRA MA JE NAJD£U¯SZE--??
SELECT o.* FROM osoby o
WHERE LENGTH(o.nazwisko)=ANY(SELECT MAX(LENGTH(o2.nazwisko) FROM osoby o2));

--SUMA WSZYSTKICH PENSJI--
SELECT SUM(p.pensja) FROM pensje p, zatrudnienia z
WHERE p.id_osoby=z.id_osoby;

--SUMA NAJWY¯SZYCH PENSJI ZE WSZYSTKICH WYDZIA£ÓW--
SELECT MAX(SUM(p.pensja)) FROM pensje p, zatrudnienia z
WHERE p.id_osoby=z.id_osoby
GROUP BY z.id_wydzialy;

--SUMA NAJNI¯SZYCH PENSJI ZE WSZYSTKICH WYDZIA£ÓW--
SELECT MIN(SUM(p.pensja)) FROM pensje p, zatrudnienia z
WHERE p.id_osoby=z.id_osoby
GROUP BY z.id_wydzialy;

??--SUMA PENSJI, NA KTÓRYM WYDZIALE PENSJA JEST MINIMALNA--??
??--SUMA PENSJI NA POSZCZEGÓLNYCH WYDZIA£ACH--??

--NAZWA WYDZIA£U, NA KTÓREJ SUMA PENSJI JEST NAJMNIEJSZA--
SELECT w.nazwa FROM wydzialy w, zatrudnienia z, pensje p
WHERE w.id=z.id_wydzialy
AND p.id_osoby=z.id_osoby
GROUP BY w.nazwa
HAVING SUM(p.pensja) IN (SELECT MIN(SUM(p2.pensja))
FROM pensje p2, zatrudnienia z2
WHERE p2.id_osoby=z2.id_osoby
GROUP BY z2.id_wydzialy);

--LISTA OSÓB ZATRUDNIONYCH NA WYDZIALE, GDZIE SUMA PENSJI JEST NAJMNIEJSZA--
SELECT * FROM osoby INNER JOIN zatrudnienia ON
zatrudnienia.id_osoby=osoby.id
WHERE zatrudnienia.id_wydzialy=
(SELECT w.id FROM wydzialy w, zatrudnienia z, pensje p
WHERE w.id=z.id_wydzialy
AND p.id_osoby=z.id_osoby
GROUP BY w.id
HAVING SUM(p.pensja) IN (SELECT MIN(SUM(p2.pensja))
FROM pensje p2, zatrudnienia z2
WHERE p2.id_osoby=z2.id_osoby
GROUP BY z2.id_wydzialy));

--DANE OSOBOWE OSOBY, KTÓRA MA NAJNI¯SZ¥ PENSJÊ--
SELECT * FROM osoby, pensje
WHERE osoby.id=pensje.id_osoby
AND pensje.pensja=
(SELECT MIN(pensja)
FROM pensje);

--NAZWA WYDZIA£U, KTÓREGO SZEF JEST NAJSTARSZY--
SELECT nazwa FROM wydzialy w
WHERE w.szef=(
SELECT id FROM osoby o
WHERE o.data_ur=(SELECT MIN(o2.data_ur) FROM osoby o2, wydzialy w2 
WHERE w2.szef=o2.id));

--NAJSTARSZA KOBIETA I NAJSTARSZY MÊ¯CZYZNA--
SELECT * FROM osoby o
WHERE o.data_ur=
(SELECT MIN(o2.data_ur) FROM osoby o2
WHERE o2.plec='K')
OR o.data_ur=
(SELECT MIN(o3.data_ur) FROM osoby o3
WHERE o3.plec='M');

--NAJM£ODSZA KOBIETA I NAJM£ODSZY MÊ¯CZYZNA--
SELECT * FROM osoby o
WHERE o.data_ur=ANY
(SELECT MAX(o2.data_ur) FROM osoby o2 
WHERE o.plec=o2.plec);

--WYDZIA£, NA KTÓRYM JEST NAJWIÊCEJ AKTUALNIE ZATRUDNIONYCH PRACOWNIKÓW/OSÓB--
SELECT w.nazwa, COUNT(z.id_osoby) FROM wydzialy w, zatrudnienia z
WHERE w.id=z.id_wydzialy
GROUP BY w.nazwa
HAVING COUNT(z.id_osoby) IN (SELECT MAX(COUNT(z2.id_osoby)) FROM zatrudnienia z2
GROUP BY z2.id_wydzialy);

--WYPISAÆ OSOBY, KTÓRE MIA£Y ZMIENION¥ UMOWÊ O ZATRUDNIENIU (W OPARCIU O ILOŒÆ WPISÓW W TABELI ZATRUDNIENIA)--
SELECT o.id FROM osoby o, zatrudnienia z
WHERE o.id=z.id_osoby
GROUP BY o.id
HAVING COUNT(z.id_osoby) > 1;

--NAJSTARSZA KOBIERA Z KA¯DEGO WYDZIA£U--
SELECT o.* FROM osoby o, zatrudnienia z, wydzialy w
WHERE o.id=z.id_osoby
AND o.plec='K'
AND z.id_wydzialy=w.id
AND o.data_ur=
(SELECT MIN(o2.data_ur) FROM osoby o2, wydzialy w2, zatrudnienia z2
WHERE o2.id=z2.id_osoby
AND o2.plec='K'
AND z2.id_wydzialy=w2.id
AND w2.nazwa=w.nazwa);