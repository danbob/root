--DODANIE KOLUMNY DO TABELI--
ALTER TABLE wydzialy
ADD kolumna NUMBER(2);

--MODYFIKACJA RODZAJU WPISYWANYCH WARTOŒCI W KOLUMNIE--
ALTER TABLE wydzialy
MODIFY kolumna NUMBER(5);

--USUWANIE DANEJ KOLUMNY--
ALTER TABLE wydzialy
DROP COLUMN kolumna;

??--USUWANIE WIERSZA Z TABELI O DANYM ID--??
DELETE FROM wydzialy
WHERE id=4;

--AKTUALIZACJA/ZMIANA DANYCH (NAZWISKA) W DANYM WIERSZU--
UPDATE osoby
SET nazwisko='Malinowska'
WHERE id=6;

--AKTUALIZACJA/ZMIANA DANYCH (NAZWISKA) W DANYM WIERSZU ZE ZMIAN¥ PIERWSZEJ LITERY (W KA¯DYM S£OWIE) NA DU¯¥ (INITCAP)--
UPDATE osoby
SET nazwisko=INITCAP('malinowska')
WHERE id=6;

--WYŒWIETLANIE NAZWISK Z MA£YCH LITER--
SELECT nazwisko FROM osoby
WHERE nazwisko=LOWER(nazwisko);

--WYŒWIETLANIE KA¯DEJ KOLUMNY DLA NAZWISKA 'kot' (PISANE Z MA£YCH LITER)--
SELECT * FROM osoby
WHERE LOWER(nazwisko)=LOWER('kot');

--WYŒWIETLANIE NAZWISK Z DU¯YCH LITER--
SELECT UPPER(nazwisko)
FROM osoby;

--WYŒWIETLANIE NAZWISK O PODANYCH ID--
SELECT nazwisko
FROM osoby
WHERE id IN(3, 5, 7);
--LUB--
SELECT nazwisko
FROM osoby
WHERE id=ANY(3, 5, 7);

--WYŒWIETLA NAZWISKA KOÑCZ¥CE SIÊ NA LITERÊ 'a'--
SELECT * FROM osoby
WHERE SUBSTR(nazwisko, LENGTH(nazwisko))='a';
--LUB--
SELECT * FROM osoby
WHERE nazwisko LIKE '%a';

--WYŒWIETLA NAZWISKO O OKREŒLONEJ LICZBIE ZNAKÓW ('_') ZAKOÑCZONYCH NA DAN¥ LITERÊ--
SELECT * FROM osoby
WHERE nazwisko LIKE '__t';

--PODANIE DRUGIEGO IMIENIA ORAZ ZAMIANA WARTOŒCI 'NULL' NA 'brak'--
SELECT NVL(imie2,'brak')
FROM osoby;

--PODANIE INICJA£ÓW (PO£¥CZENIE KOLUMNY NAZWISK Z IMIONAMI)--
SELECT SUBSTR(nazwisko, 1, 1) || SUBSTR(imie1, 1, 1)
AS inicialy
FROM osoby;

--ZAMIANA OZNACZENIA P£CI ('K' NA 'kobieta','M' NA 'mezczyzna')--
SELECT DECODE(plec,'K','kobieta','M','mezczyzna')
AS plec
FROM osoby;
--LUB--
SELECT REPLACE(REPLACE(plec,'M','mezczyzna'),'K','kobieta')
FROM osoby;
--LUB--
SELECT nazwisko, Case 
WHEN plec='K' THEN 'kobieta'
ELSE 'mezczyzna' END 
AS plec
FROM osoby;

--WSKAZANIE SAMEGO ROKU Z DATY URODZENIA--
SELECT
TO_CHAR(data_ur,'yyyy')
FROM osoby;

--POKAZUJE OSOBY URODZONE PRZED DAT¥--
SELECT * FROM osoby
WHERE data_ur < to_date ('10/10/1970','dd/mm/yyyy');

--POKAZUJE OSOBY URODZONE PO DACIE (Z UWZGLÊDNIENIEM RODZAJU ZNAKÓW)--
SELECT * FROM osoby
WHERE TO_NUMBER(EXTRACT(year FROM data_ur))>1970;
--LUB--
SELECT * FROM osoby
WHERE TO_NUMBER(TO_CHAR(data_ur,'yyyy'))>1970;

--OBLICZENIE ILOŒCI ZNAKÓW--
SELECT nazwisko || imie1 || ' dlugosc:' || 
(LENGTH(nazwisko) + LENGTH(imie1))
AS dlogosc
FROM osoby;

--ZLICZA ILOŒÆ WIERSZY W TABELI--
SELECT COUNT(*)
FROM pensje;

--ZLICZANIE ILOŒCI PENSJI PO ID_OSOBY--
SELECT id_osoby, COUNT(*)
FROM pensje
GROUP BY id_osoby;

--SUMA PENSJI DANEJ OSOBY--
SELECT id_osoby, SUM(pensja)
FROM pensje
GROUP BY id_osoby;

--ZLICZANIE SUMY PENSJI, GDZIE S¥ WIÊCEJ NI¯ DWIE PENSJE--
SELECT id_osoby, SUM(pensja)
FROM pensje
GROUP BY id_osoby
HAVING COUNT(*) > 1;

--WYPISANIE ID 1, 7, GDZIE MAJ¥ DWIE PENSJE--
SELECT id_osoby, SUM(pensja)
FROM pensje
WHERE id_osoby in(1, 7)
GROUP BY id_osoby
HAVING COUNT(*) > 1;

--WYŒWIETLENIE DANYCH OSOBOWYCH OSOBY 'Norek'--
SELECT * 
FROM osoby
WHERE INITCAP(nazwisko)='Norek';

--OSTATNIE NAZWISKO ALFABETYCZNIE Z TABELI--
SELECT MAX(nazwisko)
FROM osoby;

--OSTATNIE NAZWISKO ALFABETYCZNIE Z TABELI + JEJ DANE--
SELECT * FROM osoby
WHERE nazwisko=(SELECT MAX(nazwisko) FROM osoby);

--NAZWISKA ZACZYNAJ¥CE SIÊ NA MA£¥ LITERÊ--
SELECT o.* FROM osoby o
WHERE o.nazwisko IN (SELECT LOWER(nazwisko) FROM osoby);

--WYŒWIETLA NAJM£ODSZ¥ OSOBÊ Z TABELI--
SELECT o.* FROM osoby o
WHERE o.data_ur IN (SELECT MAX(data_ur) FROM osoby);

--WYŒWIETLA WSZYSTKIE OSOBY OD TEJ NAJSTARSZEJ (BEZ JEJ UWZGLÊDNIENIA)--
SELECT o.* FROM osoby o
WHERE NOT o.data_ur IN (SELECT MIN(data_ur) FROM osoby);
--LUB--
SELECT o.* FROM osoby o
WHERE o.data_ur > (SELECT MIN(data_ur) FROM osoby);

--OSOBY NIEPOSIADAJ¥CE PENSJI--
SELECT o.* FROM osoby o
WHERE o.id IN (SELECT p.id_osoby FROM pensje p WHERE p.pensja IS NULL);

--OSOBY, KTÓRE NIE MAJ¥ DATY ZATRUDNIENIA 'do'--
SELECT o.* FROM osoby o
WHERE o.id IN (SELECT p.id_osoby FROM pensje p WHERE p.do IS NULL);

--PIERWSZA OSOBA Z TABELI OSOBY--
SELECT o.* FROM osoby o
WHERE ROWNUM = 1; 

--TRZY PIERWSZE OSOBY Z TABELI OSOBY--
SELECT o.* FROM osoby o
WHERE ROWNUM <=3;

--TRZY OSOBY Z TABELI OSOBY WYMIENIONE ALFABETYCZNIE--
SELECT * FROM(SELECT * FROM osoby
ORDER BY nazwisko)
WHERE ROWNUM <= 3;

--CZTERY OSOBY Z TABELI OSOBY WYMIENIONE ALFABETYCZNIE--
SELECT * FROM(SELECT * FROM osoby
ORDER BY nazwisko DESC) 
WHERE ROWNUM <= 4;

--DANE SZEFÓW--
SELECT * FROM osoby
WHERE id IN(SELECT szef FROM wydzialy);

--DANE OSOBY, KTÓRA POSIADA NAJD£U¯SZ¥ SUMÊ IMIENIA I NAZWISKA--
SELECT o.* FROM osoby o
WHERE LENGTH(o.imie1)+LENGTH(o.nazwisko) IN(SELECT MAX(LENGTH(nazwisko) + LENGTH(imie1)) FROM osoby);

--NAJKRÓTSZA NAZWA WYDZIA£U--
SELECT w.* FROM wydzialy w
WHERE LENGTH(w.nazwa) IN(SELECT MIN(LENGTH(w1.nazwa)) FROM wydzialy w1);

--DANE NAJSTARSZEJ AKTUALNIE ZATRUDNIONEJ OSOBY--
SELECT * FROM osoby
WHERE data_ur IN(SELECT MIN(data_ur) FROM osoby INNER JOIN pensje ON osoby.id=pensje.id_osoby
WHERE pensje.do IS NOT NULL);

??--NAZWISKO OSOBY, KTÓRA MA JE NAJD£U¯SZE--??
SELECT o.* FROM osoby o
WHERE LENGTH(o.nazwisko)=ANY(SELECT MAX(LENGTH(o2.nazwisko) FROM osoby o2));

--SUMA WSZYSTKICH PENSJI--
SELECT SUM(p.pensja) FROM pensje p, zatrudnienia z
WHERE p.id_osoby=z.id_osoby;

--SUMA NAJWY¯SZYCH PENSJI ZE WSZYSTKICH WYDZIA£ÓW--
SELECT MAX(SUM(p.pensja)) FROM pensje p, zatrudnienia z
WHERE p.id_osoby=z.id_osoby
GROUP BY z.id_wydzialy;

--SUMA NAJNI¯SZYCH PENSJI ZE WSZYSTKICH WYDZIA£ÓW--
SELECT MIN(SUM(p.pensja)) FROM pensje p, zatrudnienia z
WHERE p.id_osoby=z.id_osoby
GROUP BY z.id_wydzialy;

--NAZWA WYDZIA£U, NA KTÓREJ SUMA PENSJI JEST NAJMNIEJSZA--
SELECT w.nazwa FROM wydzialy w, zatrudnienia z, pensje p
WHERE w.id=z.id_wydzialy
AND p.id_osoby=z.id_osoby
GROUP BY w.nazwa
HAVING SUM(p.pensja) IN (SELECT MIN(SUM(p2.pensja))
FROM pensje p2, zatrudnienia z2
WHERE p2.id_osoby=z2.id_osoby
GROUP BY z2.id_wydzialy);

--LISTA OSÓB ZATRUDNIONYCH NA WYDZIALE, GDZIE SUMA PENSJI JEST NAJMNIEJSZA--
SELECT * FROM osoby INNER JOIN zatrudnienia ON
zatrudnienia.id_osoby=osoby.id
WHERE zatrudnienia.id_wydzialy=
(SELECT w.id FROM wydzialy w, zatrudnienia z, pensje p
WHERE w.id=z.id_wydzialy
AND p.id_osoby=z.id_osoby
GROUP BY w.id
HAVING SUM(p.pensja) IN (SELECT MIN(SUM(p2.pensja))
FROM pensje p2, zatrudnienia z2
WHERE p2.id_osoby=z2.id_osoby
GROUP BY z2.id_wydzialy));

--DANE OSOBOWE OSOBY, KTÓRA MA NAJNI¯SZ¥ PENSJÊ--
SELECT * FROM osoby, pensje
WHERE osoby.id=pensje.id_osoby
AND pensje.pensja=
(SELECT MIN(pensja)
FROM pensje);

--NAZWA WYDZIA£U, KTÓREGO SZEF JEST NAJSTARSZY--
SELECT nazwa FROM wydzialy w
WHERE w.szef=(
SELECT id FROM osoby o
WHERE o.data_ur=(SELECT MIN(o2.data_ur) FROM osoby o2, wydzialy w2 
WHERE w2.szef=o2.id));

--NAJSTARSZA KOBIETA I NAJSTARSZY MÊ¯CZYZNA--
SELECT * FROM osoby o
WHERE o.data_ur=
(SELECT MIN(o2.data_ur) FROM osoby o2
WHERE o2.plec='K')
OR o.data_ur=
(SELECT MIN(o3.data_ur) FROM osoby o3
WHERE o3.plec='M');

--NAJM£ODSZA KOBIETA I NAJM£ODSZY MÊ¯CZYZNA--
SELECT * FROM osoby o
WHERE o.data_ur=ANY
(SELECT MAX(o2.data_ur) FROM osoby o2 
WHERE o.plec=o2.plec);

--WYDZIA£, NA KTÓRYM JEST NAJWIÊCEJ AKTUALNIE ZATRUDNIONYCH PRACOWNIKÓW/OSÓB--
SELECT w.nazwa, COUNT(z.id_osoby) FROM wydzialy w, zatrudnienia z
WHERE w.id=z.id_wydzialy
GROUP BY w.nazwa
HAVING COUNT(z.id_osoby) IN (SELECT MAX(COUNT(z2.id_osoby)) FROM zatrudnienia z2
GROUP BY z2.id_wydzialy);

--WYPISAÆ OSOBY, KTÓRE MIA£Y ZMIENION¥ UMOWÊ O ZATRUDNIENIU (W OPARCIU O ILOŒÆ WPISÓW W TABELI ZATRUDNIENIA)--
SELECT o.id FROM osoby o, zatrudnienia z
WHERE o.id=z.id_osoby
GROUP BY o.id
HAVING COUNT(z.id_osoby) > 1;

--NAJSTARSZA KOBIERA Z KA¯DEGO WYDZIA£U--
SELECT o.* FROM osoby o, zatrudnienia z, wydzialy w
WHERE o.id=z.id_osoby
AND o.plec='K'
AND z.id_wydzialy=w.id
AND o.data_ur=
(SELECT MIN(o2.data_ur) FROM osoby o2, wydzialy w2, zatrudnienia z2
WHERE o2.id=z2.id_osoby
AND o2.plec='K'
AND z2.id_wydzialy=w2.id
AND w2.nazwa=w.nazwa);

--------------------------------------------------------------------------------------------------------------

--A (Wyœwietla osoby obecnie zatrudnione z pensj¹ wiêksz¹ ni¿ 2000 i mniejsz¹ ni¿ 3000)
SELECT * FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
JOIN PENSJE ON PENSJE.id_osoby = OSOBY.ID
WHERE ZATRUDNIENIA.DO IS NULL
AND (PENSJE.PENSJA > 2000 AND PENSJE.PENSJA <3000)
ORDER BY DATA_UR;

--B
SELECT TRUNC(SUM(TO_CHAR(SYSDATE-DATA_UR)/365)/COUNT(*),0) SREDNI_WIEK FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
WHERE ID_OSOBY NOT IN (SELECT ID_OSOBY FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
WHERE (ZATRUDNIENIA.OD < SYSDATE AND (ZATRUDNIENIA.DO IS NULL OR ZATRUDNIENIA.DO > SYSDATE)));

--C (Wyœwietla pensjê mê¿czyzny starszego od podanej daty z jedn¹ pensj¹)
SELECT * FROM
(SELECT PENSJA FROM PENSJE
JOIN OSOBY ON ID_OSOBY = OSOBY.ID
WHERE OSOBY.PLEC = 'M'
AND DATA_UR < TO_DATE('10.10.1990', 'DD.MM.YYYY')
ORDER BY pensje.pensja DESC)
WHERE ROWNUM < 2;

--D (Wyœwietla ID wydzia³u oraz liczbê osób, gdzie ich jest najmniej zatrudnionych)
SELECT * FROM
(SELECT ID_WYDZIALY,COUNT(*) ILOSC_OSBOB FROM ZATRUDNIENIA
GROUP BY ID_WYDZIALY
ORDER BY ILOSC_OSBOB ASC)
WHERE ROWNUM <2;

--E (Wyœwietla kobietê zatrudnion¹ na wydziale fizyki)
SELECT * FROM OSOBY
WHERE PLEC = 'K'
AND ID IN
(SELECT ZATRUDNIENIA.ID_OSOBY FROM ZATRUDNIENIA
JOIN WYDZIALY ON WYDZIALY.ID = ZATRUDNIENIA.ID_WYDZIALY
WHERE WYDZIALY.ID IN (SELECT ID FROM WYDZIALY
WHERE LOWER(NAZWA) LIKE LOWER('FIZYKI'))
AND (ZATRUDNIENIA.DO IS NULL));

--F (Wyœwietla osoby z jedn¹ umow¹)
SELECT * FROM OSOBY
WHERE ID IN
(SELECT ID_OSOBY FROM
(SELECT ID_OSOBY, COUNT(*) ILOSC_UMOW FROM ZATRUDNIENIA
GROUP BY ID_OSOBY)
WHERE ILOSC_UMOW <2);

--G (Wyœwietla 5 osób, które posiadaj¹ drugie imiê i maj¹ krótkie pierwsze imiona)
SELECT * FROM
(SELECT * FROM OSOBY
WHERE IMIE2 IS NOT NULL
ORDER BY LENGTH(IMIE1) DESC)
WHERE ROWNUM < 6;

--H (Wyœwietla najstarsze zatrudnione osoby na wszystkich wydzia³ach)
SELECT * FROM OSOBY
WHERE DATA_UR IN (SELECT MIN(DATA_UR) FROM OSOBY
JOIN ZATRUDNIENIA ON OSOBY.ID = ZATRUDNIENIA.ID_OSOBY
GROUP BY ID_WYDZIALY);

--I (Wyœwietla id oraz nazwê wydzia³u, gdzie pracuje kobieta) DO DOKONCZENIA ; JEDEN DZAIAL MA '0' KOBIET WRRRR
SELECT * FROM WYDZIALY
WHERE ID NOT IN
(SELECT WYDZIALY.ID FROM ZATRUDNIENIA
JOIN OSOBY ON OSOBY.ID = ZATRUDNIENIA.ID_OSOBY
JOIN WYDZIALY ON ZATRUDNIENIA.ID_WYDZIALY = WYDZIALY.ID
WHERE ZATRUDNIENIA.DO IS NULL
AND PLEC = 'K'
GROUP BY WYDZIALY.ID);
--OSZUKANE
SELECT NVL2(COUNT(*),COUNT(*),0),ID_WYDZIALY FROM ZATRUDNIENIA
JOIN OSOBY ON OSOBY.ID = ZATRUDNIENIA.ID_OSOBY
WHERE PLEC = 'K'
AND (ZATRUDNIENIA.OD < SYSDATE AND (ZATRUDNIENIA.DO IS NULL OR ZATRUDNIENIA.DO > SYSDATE))
GROUP BY ID_WYDZIALY;

--J
SELECT (MAX(NVL2(DO,DO,SYSDATE)-OD)-MIN(NVL2(DO,DO,SYSDATE)-OD))/365 LAT_DLUZEJ FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
WHERE (ZATRUDNIENIA.OD < SYSDATE AND (ZATRUDNIENIA.DO IS NULL OR ZATRUDNIENIA.DO > SYSDATE));

--K
SELECT * FROM OSOBY
WHERE ID IN (
SELECT ID_OSOBY FROM ZATRUDNIENIA
WHERE OD > (SELECT * FROM
(SELECT DATA_UR FROM OSOBY
WHERE ID IN (SELECT SZEF FROM WYDZIALY)
ORDER BY DATA_UR DESC)
WHERE ROWNUM <2)
GROUP BY ID_OSOBY);

--L
SELECT * FROM
(SELECT COUNT(*) "ILOSC WYPOWIEDZIANYCH",MON FROM
(SELECT to_char( DO, 'MON' ) MON FROM ZATRUDNIENIA)
WHERE MON IS NOT NULL
GROUP BY MON
ORDER BY MON)
WHERE ROWNUM <2;

--M (Wyœwietla nazwiska osób dodane z ma³ych liter)
SELECT ID, LOWER(NAZWISKO) AS "male nazwisko" FROM OSOBY
WHERE ID IN (1,2,3);

--N (Wyœwietla trzeci¹ literê nazwy wydzia³u)
SELECT SUBSTR(NAZWA,3,1) AS "SRODKOWA" FROM WYDZIALY;

--A (Wyœwietla osoby urodzone przez 1987 rokiem oraz nadal zatrudnione)
select imie1, imie2, nazwisko, data_ur, plec
from osoby o, pensje p
where o.id=p.id_osoby
and p.do is not null
and TO_NUMBER(TO_CHAR(data_ur,'yyyy'))<1987
order by plec
 
--B (Wyœwietla iloœæ zatrudnionych dni osób z wydzia³u informatyki)
select o.id, o.nazwisko, round(sysdate - z.od) as dni
from osoby o, wydzialy w, zatrudnienia z
where o.id=z.id_osoby
and w.id=z.id_wydzialy
and w.nazwa='informatyki'
and z.do is null
 
--C (Wyœwietla œredni¹ pensjê mê¿czyzn, którzy ju¿ nie pracuj¹)
select round(avg(pensja)) as avg_salary
from pensje p, osoby o
where o.id=p.id_osoby
and p.do is not null
and o.plec = 'M'
 
--E (Wyœwietla najm³odzsz¹ osobê zatrudnion¹ na wydziale o id=2)
select o.imie1, o.imie2, o.nazwisko, o.data_ur, o.plec
from osoby o, zatrudnienia z
where
(select max(o.data_ur) from
osoby o, zatrudnienia z
where o.id=z.id_osoby
and id_wydzialy=2)=data_ur
and z.id_osoby=o.id
and id_wydzialy=2
 
--F (Wyœwietla osoby zatrudnione)
select o.imie1, o.imie2, o.nazwisko, o.data_ur, o.plec
from osoby o, zatrudnienia z
where o.id=z.id_osoby
and z.do is null
 
--G (Wyœwietla osoby o trzech najkrótszych nazwiskach)
select * from
osoby o, (select id
from osoby
order by length(nazwisko)) l
where o.id=l.id
and rownum<=3
 
--H (Wyœwietla najstarsze zatrudnione kobiety)
select * from osoby where data_ur in (
select min(data_ur) from
(select *
from osoby o, zatrudnienia z
where z.id_osoby=o.id
and plec = 'K')
group by id_wydzialy)

--J (Wyœwietla najd³u¿sze kiedyœ trwaj¹ce zatrudnienie)
select round(((b.max-a.min)/365)) zaokrogona_roznica_lat, (b.max-a.min) roznica_dni from
(select * from
(select round(do-od) min
from zatrudnienia
where do is not null
order by round(do-od))
where rownum=1) a, (select * from
(select round(do-od) max
from zatrudnienia
where do is not null
order by round(do-od) desc)
where rownum=1) b
 
--K (Wyœwietla szefów wydzia³ów)
select o.imie1, o.imie2, o.nazwisko, o.data_ur
from osoby o, zatrudnienia z
where o.id=z.id_osoby
and to_char(z.od,'MM-DD')>(select to_char(data_ur,'MM-DD') from
(select data_ur from
osoby o, wydzialy w
where w.szef=o.id
order by data_ur)
where rownum = 1)
 
--L (Najd³u¿ej zatrudniony pracownik - ile jest to miesiêcy)
select miesiac from (
select to_char(do,'MM') as miesiac, count(to_char(do,'MM')) as a
from zatrudnienia
where do is not null
group by to_char(do,'MM')
order by a desc)
where rownum = 1
 
--N (?)
select nazwa as DUZA_LITERA from
(select id, substr(nazwa,2,1) from wydzialy
where substr(nazwa,2,1)='i') i, wydzialy w
where i.id=w.id