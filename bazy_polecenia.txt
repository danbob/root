--A (Wyœwietla osoby obecnie zatrudnione z pensj¹ wiêksz¹ ni¿ 2000 i mniejsz¹ ni¿ 3000)
SELECT * FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
JOIN PENSJE ON PENSJE.id_osoby = OSOBY.ID
WHERE ZATRUDNIENIA.DO IS NULL
AND (PENSJE.PENSJA > 2000 AND PENSJE.PENSJA <3000)
ORDER BY DATA_UR;

--B
SELECT TRUNC(SUM(TO_CHAR(SYSDATE-DATA_UR)/365)/COUNT(*),0) SREDNI_WIEK FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
WHERE ID_OSOBY NOT IN (SELECT ID_OSOBY FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
WHERE (ZATRUDNIENIA.OD < SYSDATE AND (ZATRUDNIENIA.DO IS NULL OR ZATRUDNIENIA.DO > SYSDATE)));

--C (Wyœwietla pensjê mê¿czyzny starszego od podanej daty z jedn¹ pensj¹)
SELECT * FROM
(SELECT PENSJA FROM PENSJE
JOIN OSOBY ON ID_OSOBY = OSOBY.ID
WHERE OSOBY.PLEC = 'M'
AND DATA_UR < TO_DATE('10.10.1990', 'DD.MM.YYYY')
ORDER BY pensje.pensja DESC)
WHERE ROWNUM < 2;

--D (Wyœwietla ID wydzia³u oraz liczbê osób, gdzie ich jest najmniej zatrudnionych)
SELECT * FROM
(SELECT ID_WYDZIALY,COUNT(*) ILOSC_OSBOB FROM ZATRUDNIENIA
GROUP BY ID_WYDZIALY
ORDER BY ILOSC_OSBOB ASC)
WHERE ROWNUM <2;

--E (Wyœwietla kobietê zatrudnion¹ na wydziale fizyki)
SELECT * FROM OSOBY
WHERE PLEC = 'K'
AND ID IN
(SELECT ZATRUDNIENIA.ID_OSOBY FROM ZATRUDNIENIA
JOIN WYDZIALY ON WYDZIALY.ID = ZATRUDNIENIA.ID_WYDZIALY
WHERE WYDZIALY.ID IN (SELECT ID FROM WYDZIALY
WHERE LOWER(NAZWA) LIKE LOWER('FIZYKI'))
AND (ZATRUDNIENIA.DO IS NULL));

--F (Wyœwietla osoby z jedn¹ umow¹)
SELECT * FROM OSOBY
WHERE ID IN
(SELECT ID_OSOBY FROM
(SELECT ID_OSOBY, COUNT(*) ILOSC_UMOW FROM ZATRUDNIENIA
GROUP BY ID_OSOBY)
WHERE ILOSC_UMOW <2);

--G (Wyœwietla 5 osób, które posiadaj¹ drugie imiê i maj¹ krótkie pierwsze imiona)
SELECT * FROM
(SELECT * FROM OSOBY
WHERE IMIE2 IS NOT NULL
ORDER BY LENGTH(IMIE1) DESC)
WHERE ROWNUM < 6;

--H (Wyœwietla najstarsze zatrudnione osoby na wszystkich wydzia³ach)
SELECT * FROM OSOBY
WHERE DATA_UR IN (SELECT MIN(DATA_UR) FROM OSOBY
JOIN ZATRUDNIENIA ON OSOBY.ID = ZATRUDNIENIA.ID_OSOBY
GROUP BY ID_WYDZIALY);

--I (Wyœwietla id oraz nazwê wydzia³u, gdzie pracuje kobieta) DO DOKONCZENIA ; JEDEN DZAIAL MA '0' KOBIET WRRRR
SELECT * FROM WYDZIALY
WHERE ID NOT IN
(SELECT WYDZIALY.ID FROM ZATRUDNIENIA
JOIN OSOBY ON OSOBY.ID = ZATRUDNIENIA.ID_OSOBY
JOIN WYDZIALY ON ZATRUDNIENIA.ID_WYDZIALY = WYDZIALY.ID
WHERE ZATRUDNIENIA.DO IS NULL
AND PLEC = 'K'
GROUP BY WYDZIALY.ID);
--OSZUKANE
SELECT NVL2(COUNT(*),COUNT(*),0),ID_WYDZIALY FROM ZATRUDNIENIA
JOIN OSOBY ON OSOBY.ID = ZATRUDNIENIA.ID_OSOBY
WHERE PLEC = 'K'
AND (ZATRUDNIENIA.OD < SYSDATE AND (ZATRUDNIENIA.DO IS NULL OR ZATRUDNIENIA.DO > SYSDATE))
GROUP BY ID_WYDZIALY;

--J
SELECT (MAX(NVL2(DO,DO,SYSDATE)-OD)-MIN(NVL2(DO,DO,SYSDATE)-OD))/365 LAT_DLUZEJ FROM OSOBY
JOIN ZATRUDNIENIA ON ZATRUDNIENIA.ID_OSOBY = OSOBY.ID
WHERE (ZATRUDNIENIA.OD < SYSDATE AND (ZATRUDNIENIA.DO IS NULL OR ZATRUDNIENIA.DO > SYSDATE));

--K
SELECT * FROM OSOBY
WHERE ID IN (
SELECT ID_OSOBY FROM ZATRUDNIENIA
WHERE OD > (SELECT * FROM
(SELECT DATA_UR FROM OSOBY
WHERE ID IN (SELECT SZEF FROM WYDZIALY)
ORDER BY DATA_UR DESC)
WHERE ROWNUM <2)
GROUP BY ID_OSOBY);

--L
SELECT * FROM
(SELECT COUNT(*) "ILOSC WYPOWIEDZIANYCH",MON FROM
(SELECT to_char( DO, 'MON' ) MON FROM ZATRUDNIENIA)
WHERE MON IS NOT NULL
GROUP BY MON
ORDER BY MON)
WHERE ROWNUM <2;

--M (Wyœwietla nazwiska osób dodane z ma³ych liter)
SELECT ID, LOWER(NAZWISKO) AS "male nazwisko" FROM OSOBY
WHERE ID IN (1,2,3);

--N (Wyœwietla trzeci¹ literê nazwy wydzia³u)
SELECT SUBSTR(NAZWA,3,1) AS "SIRODKOWA" FROM WYDZIALY;